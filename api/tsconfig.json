{
	"include": [
		"src/**/*",
		".eslintrc.cjs",
		"vite.config.ts",
		"codegen.ts"
	],
	"exclude": [
		"node_modules",
		"vite.config.ts"
	],
  	"compilerOptions": {
		"paths": {
			"@app/*": [
				"./src/*"
			]
		},
        "skipLibCheck": true,
		/* Basic Options */
		"target": "es2020",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
		"module": "node16",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
		"moduleResolution": "node16",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
		"allowJs": false,                       /* Allow javascript files to be compiled. */
		"outDir": "./dist",                        /* Redirect output structure to the directory. */
		"rootDir": "./src",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
		"removeComments": true,                /* Do not emit comments to output. */

		/* Strict Type-Checking Options */
		"strict": true,                           /* Enable all strict type-checking options. */
		"noImplicitAny": false,                 /* Raise error on expressions and declarations with an implied 'any' type. */
		"strictNullChecks": true,              /* Enable strict null checks. */
		// "strictFunctionTypes": true,           /* Enable strict checking of function types. */
		// "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
		// "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
		// "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
		"alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

		/* Additional Checks */
		"noUnusedLocals": false,                /* Report errors on unused locals. */
		"noUnusedParameters": false,            /* Report errors on unused parameters. */
		"noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
		"noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

		/* Module Resolution Options */
		"baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
		// "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
		// "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
		"typeRoots": [
			"node_modules/@types/",
			"./src/types/"
		],
		"esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
		
		/* Experimental Options */
		"experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
		"emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

		/* Advanced Options */
	    "forceConsistentCasingInFileNames": true  /* Disallow inconsistently-cased references to the same file. */,
		"resolveJsonModule": true
	  }
}
