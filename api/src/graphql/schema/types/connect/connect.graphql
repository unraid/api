input ConnectUserInfoInput {
    preferred_username: String!
    email: String!
    avatar: String
}

input ConnectSignInInput {
    apiKey: String!
    idToken: String
    userInfo: ConnectUserInfoInput
    accessToken: String
    refreshToken: String
}

input AllowedOriginInput {
    origins: [String!]!
}

enum WAN_ACCESS_TYPE {
    DYNAMIC
    ALWAYS
    DISABLED
}

enum WAN_FORWARD_TYPE {
    UPNP
    STATIC
}

type RemoteAccess {
    accessType: WAN_ACCESS_TYPE!
    forwardType: WAN_FORWARD_TYPE
    port: Port
}

input SetupRemoteAccessInput {
    accessType: WAN_ACCESS_TYPE!
    forwardType: WAN_FORWARD_TYPE
    port: Port
}



input EnableDynamicRemoteAccessInput {
    url: AccessUrlInput!
    enabled: Boolean!
}

enum DynamicRemoteAccessType {
    STATIC
    UPNP
    DISABLED
}

type DynamicRemoteAccessStatus {
    enabledType: DynamicRemoteAccessType!
    runningType: DynamicRemoteAccessType!
    error: String
}

type Connect implements Node {
    id: ID!
    dynamicRemoteAccess: DynamicRemoteAccessStatus!
}

type Query {
    remoteAccess: RemoteAccess!
    extraAllowedOrigins: [String!]!
    connect: Connect!
}

type Mutation {
    connectSignIn(input: ConnectSignInInput!): Boolean!
    connectSignOut: Boolean!
    enableDynamicRemoteAccess(input: EnableDynamicRemoteAccessInput!): Boolean!
    setAdditionalAllowedOrigins(input: AllowedOriginInput!): [String!]!
    setupRemoteAccess(input: SetupRemoteAccessInput!): Boolean!
}           