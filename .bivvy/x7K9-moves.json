{
  "Climb": "x7K9",
  "moves": [
    {
      "status": "done",
      "description": "Create BackupMutations GraphQL type and resolver structure",
      "details": "Add BackupMutations type to backup.model.ts, create backup-mutations.resolver.ts file, and move existing mutations (createBackupJobConfig, updateBackupJobConfig, deleteBackupJobConfig, initiateBackup) from BackupResolver to the new BackupMutationsResolver following the ArrayMutationsResolver pattern"
    },
    {
      "status": "done",
      "description": "Implement toggleJobConfig mutation",
      "details": "Add toggleJobConfig resolver method with proper permissions and update BackupConfigService to handle enable/disable functionality"
    },
    {
      "status": "done",
      "description": "Implement triggerJob mutation", 
      "details": "Add triggerJob resolver method that manually triggers a backup job using existing config, with validation and error handling"
    },
    {
      "status": "done",
      "description": "Add backupJobProgress subscription",
      "details": "Create GraphQL subscription resolver for real-time backup job progress updates using existing rclone API polling",
      "rest": true
    },
    {
      "status": "done",
      "description": "Enhance BackupJob type with progress fields",
      "details": "Add progress percentage, configId reference, and detailed status fields to BackupJob model"
    },
    {
      "status": "done",
      "description": "Update frontend GraphQL queries and mutations",
      "details": "Add new mutations and subscription to backup-jobs.query.ts following the nested mutation pattern"
    },
    {
      "status": "done",
      "description": "Add toggle controls to BackupJobConfig.vue",
      "details": "Add enable/disable toggle switches to each job card with proper state management and error handling"
    },
    {
      "status": "done",
      "description": "Add manual trigger buttons to BackupJobConfig.vue", 
      "details": "Add 'Run Now' buttons with loading states and trigger the new mutation",
      "rest": true
    },
    {
      "status": "done",
      "description": "Implement progress monitoring in the UI",
      "details": "Subscribe to backup job progress and display real-time updates in the job cards with progress bars and status"
    },
    {
      "status": "done",
      "description": "Add visual indicators for job states",
      "details": "Enhance job cards with better status indicators for enabled/disabled/running states and improve overall UX"
    },
    {
      "status": "todo",
      "description": "Test integration and error handling",
      "details": "Test all functionality including edge cases, error scenarios, and subscription cleanup",
      "rest": true
    }
  ]
} 