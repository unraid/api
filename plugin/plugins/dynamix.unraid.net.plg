<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
  <!ENTITY name "">
  <!ENTITY launch "Connect">
  <!ENTITY author "limetech">
  <!ENTITY version "">
  <!ENTITY pluginURL "">
  <!ENTITY source "/boot/config/plugins/dynamix.my.servers/&name;">
  <!ENTITY TXZ_SHA256 "">
  <!ENTITY api_version "">
  <!-- Node.js Runtime. Required to run the Unraid API. -->
  <!ENTITY NODEJS_VERSION "22.14.0">
  <!-- Version is omitted from filename, so we don't need to search/delete other versions when updating the plugin. -->
  <!ENTITY NODEJS_FILENAME "node-linux-x64.tar.xz">
  <!ENTITY MAIN_TXZ "">
  <!-- VENDOR_STORE_URL points to an XZ tarball of vendored dependencies (i.e. global pnpm store), specific to the plugin version.
       This archive may be updated after installation (e.g. when adding api plugins), so we don't verify its hash.
       It is replaced only when the plugin/api is updated. -->
  <!ENTITY VENDOR_STORE_URL "">
  <!-- The archive's filename on the boot drive. Enables reproducible offline installs of the Unraid API. -->
  <!ENTITY VENDOR_STORE_FILENAME "">
  <!ENTITY TAG "">
  <!ENTITY NODE_DIR "/usr/libexec/node">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" pluginURL="&pluginURL;"
  launch="&launch;" min="6.9.0-rc1" icon="globe">

  <CHANGES>
    ##a long time ago in a galaxy far far away
    - initial release
  </CHANGES>

  <!-- Check disk space before installation -->
  <FILE Run="/bin/bash" Method="install">
    <INLINE>
      <![CDATA[
# Check available disk space on /usr
echo -n "Checking disk space on /usr... "
FREE_SPACE=$(df -m /usr | awk 'NR==2 {print $4}')
if [ -z "$FREE_SPACE" ]; then
  echo "⚠️ Error: Unable to determine free space on /usr"
  exit 1
fi

if [ "$FREE_SPACE" -lt 300 ]; then
  echo "⚠️ Error: Insufficient disk space on /usr. Need at least 300MB free, only ${FREE_SPACE}MB available"
  exit 1
fi
echo "ok. (${FREE_SPACE}MB free)"

exit 0
]]>
    </INLINE>
  </FILE>

  <FILE Name="/boot/config/plugins/dynamix.my.servers/&VENDOR_STORE_FILENAME;">
    <URL>&VENDOR_STORE_URL;</URL>
  </FILE>

  <!-- download main txz -->
  <FILE Name="&source;.txz">
    <URL>&MAIN_TXZ;</URL>
    <SHA256>&TXZ_SHA256;</SHA256>
  </FILE>

  <!-- Check for compatible Unraid version -->
  <FILE Run="/usr/bin/php" Method="install">
    <INLINE>
      <![CDATA[
<?php
// Check Unraid version
$version = @parse_ini_file('/etc/unraid-version', true)['version'];

// Check if this is a supported version
// - Must be 6.12.0 or higher
// - Must not be a 6.12.0 beta/rc version
$is_stable_6_12_or_higher = version_compare($version, '6.12.0', '>=') && !preg_match('/^6\\.12\\.0-/', $version);

if ($is_stable_6_12_or_higher) {
  echo "Running on supported version {$version}\n";
  exit(0);
}

echo "Warning: Unsupported Unraid version {$version}. This plugin requires Unraid 6.12.0 or higher.\n";
echo "The plugin may not function correctly on this system.\n";

exit(0);
]]>
    </INLINE>
  </FILE>

  <FILE Run="/bin/bash" Method="remove">
    <INLINE>
      MAINNAME="&name;"
      <![CDATA[
      echo "Removing Plugin"
      
      # Find any installed dynamix.unraid.net package
      pkg_installed=$(ls -1 /var/log/packages/dynamix.unraid.net* 2>/dev/null | head -1)
      if [ -n "$pkg_installed" ]; then
        pkg_basename=$(basename "$pkg_installed")
        echo "Removing package: $pkg_basename"
        removepkg --terse "$pkg_basename"
      else
        echo "No dynamix.unraid.net package found. Trying with basic package name."
        removepkg --terse "${MAINNAME}"
      fi
      ]]>
    </INLINE>
  </FILE>

  <!-- install all the things -->
  <FILE Run="/bin/bash" Method="install">
    <INLINE>
      TAG="&TAG;" MAINTXZ="&source;.txz"
      VENDOR_ARCHIVE="/boot/config/plugins/dynamix.my.servers/&VENDOR_STORE_FILENAME;"
    <![CDATA[
# Install the Slackware package
echo "Installing package..."
upgradepkg --install-new --reinstall "${MAINTXZ}"

# Confirm an expected file now exists
# WARNING: failure here results in broken install
[[ ! -f /usr/local/emhttp/plugins/dynamix.my.servers/scripts/gitflash_log ]] && echo "⚠️ files missing from main txz" && exit 1

# Start the Unraid API service using the rc script
if [[ -x /etc/rc.d/rc.unraid-api ]]; then
  /etc/rc.d/rc.unraid-api start
fi

if [[ -n "$TAG" && "$TAG" != "" ]]; then
  printf -v sedcmd 's@^\*\*Unraid Connect\*\*@**Unraid Connect (%s)**@' "$TAG"
  sed -i "${sedcmd}" "/usr/local/emhttp/plugins/dynamix.unraid.net/README.md"
fi

echo
echo "✅ Installation is complete, it is safe to close this window"
echo

exit 0
]]>
    </INLINE>
  </FILE>

  <!-- uninstall cleanup message -->
  <FILE Run="/bin/bash" Method="remove">
    <INLINE>
      <![CDATA[
echo
echo "✅ Uninstall is complete, it is safe to close this window"
echo

exit 0
]]>
    </INLINE>
  </FILE>

</PLUGIN>
