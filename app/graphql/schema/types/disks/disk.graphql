type Query {
    """Single disk"""
    disk(id: String!): Disk @func(module: "disks/id/get-disk")
    """Mulitiple disks"""
    disks: [Disk]! @func(module: "get-disks")
}

type Mutation {
    mountDisk(id: String!): Disk
    unmountDisk(id: String!): Disk

    clearDiskStatistics(id: String!): JSON
}

type Disk {
    idx: String!
    name: String!
    device: String!
    id: String!
    size: Int!
    status: DiskStatus!
    rotational: Boolean!
    format: String!
    temp: Int!
    numReads: Int!
    numWrites: Int!
    numErrors: Int!
    type: DiskType!
    color: String!
    fsStatus: String
    luksState: String
    comment: String
    exportable: Boolean!
    fsType: DiskFsType!
    fsColor: DiskFsColor!
    fsSize: Int!
    fsFree: Int!
    spindownDelay: String
    spinupGroup: String
    deviceSb: String
    idSb: String
    sizeSb: Int
}

enum DiskStatus {
    DISK_OK
}

enum DiskType {
    Data
    Parity
    Flash
}

enum DiskFsType {
    xfs
}

enum DiskFsColor {
    green_on
    green_off
    yellow_on
    yellow_off
    red_on
    red_off
}