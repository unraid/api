type Query {
    array: Array @func(module: "get-array")
}

type Mutation {
    """Start array"""
    startArray: JSON @func(module: "array/update-array", data: { state: "start" })
    """Stop array"""
    stopArray: JSON @func(module: "array/update-array", data: { state: "stop" })
}

type Array {
    state: ArrayState!
    capacity: ArrayCapacity!
    disks: [Disk]
}

enum ArrayState {
    """Array is started"""
    started
    """Array is stopped"""
    stopped
}

type ArrayCapacity {
    bytes: Capacity
    disks: Capacity
}

type Capacity {
    free: Long
    used: Long
    total: Long
}

type Disk {
    idx: String!
    name: String!
    device: String!
    id: String!
    size: Int!
    status: DiskStatus!
    rotational: Boolean!
    format: String!
    temp: Int!
    numReads: Int!
    numWrites: Int!
    numErrors: Int!
    type: DiskType!
    color: String!
    fsStatus: DiskFsStatus!
    luksState: String!
    comment: String!
    exportable: Boolean!
    fsType: DiskFsType!
    fsColor: DiskFsColor!
    fsSize: Int!
    fsFree: Int!
    spindownDelay: String!
    spinupGroup: String!
    deviceSb: String!
    idSb: String!
    sizeSb: Int!
}

enum DiskStatus {
    DISK_OK
}

enum DiskType {
    Data
}

enum DiskFsStatus {
    Mounted
}

enum DiskFsType {
    xfs
}

enum DiskFsColor {
    green_on
}