type Query {
    array: Array @func(module: "get-array")
}

type Mutation {
    """Start array"""
    startArray: Array @func(module: "array/update-array", data: { state: "start" })
    """Stop array"""
    stopArray: Array @func(module: "array/update-array", data: { state: "stop" })

    """Add new disk to array"""
    addDiskToArray(input: arrayDiskInput): Array @func(module: "array/add-disk")
    """Remove existing disk from array. NOTE: The array must be stopped before running this otherwise it'll throw an error."""
    removeDiskFromArray(input: arrayDiskInput): Array @func(module: "array/add-disk")
}

input arrayDiskInput {
    id: String!
    slot: Int
}

type Array {
    """Array state before this query/mutation"""
    previousState: ArrayState
    """Array state after this query/mutation"""
    pendingState: ArrayPendingState
    """Current array state"""
    state: ArrayState!
    """Current array capacity"""
    capacity: ArrayCapacity!
    """Disks in the current array"""
    disks: [Disk]
}

enum ArrayState {
    """Array is running"""
    started
    """Array has stopped"""
    stopped
}

enum ArrayPendingState {
    """Array is starting"""
    starting
    """Array is stopping"""
    stopping
}

type ArrayCapacity {
    bytes: Capacity
    disks: Capacity
}

type Capacity {
    free: Long
    used: Long
    total: Long
}