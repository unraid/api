{
  "permissions": {
    "allow": [
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(pnpm codegen:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm test:*)",
      "Bash(grep:*)",
      "Bash(pnpm type-check:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm --filter ./api lint)",
      "Bash(mv:*)",
      "Bash(ls:*)",
      "mcp__ide__getDiagnostics",
      "Bash(pnpm --filter \"*connect*\" test connect-status-writer.service.spec)",
      "Bash(pnpm storybook:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm install:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(timeout 15 pnpm storybook)",
      "WebFetch(domain:tailwindcss.com)",
      "Bash(pnpm list:*)",
      "Bash(pnpm remove:*)",
      "WebFetch(domain:github.com)",
      "mcp__browsermcp__browser_navigate",
      "Bash(clear)",
      "Bash(git log:*)",
      "Bash(pnpm --filter ./unraid-ui build)",
      "Bash(pnpm --filter @unraid/ui build)",
      "Bash(pnpm --filter @unraid/web build)",
      "Bash(python3:*)",
      "Bash(pnpm tailwind:build:*)",
      "Bash(npx tsc:*)",
      "Bash(npx jest:*)",
      "Bash(pnpm --filter @unraid/shared build)",
      "Bash(pnpm --filter ./api test src/unraid-api/cli/__test__/report.command.test.ts --run)",
      "Bash(pnpm:*)",
      "Bash(git checkout:*)",
      "Bash(node:*)",
      "Bash(time node:*)",
      "Bash(timeout:*)",
      "Bash(chmod:*)",
      "Bash(cd /Users/elibosley/Code/api)",
      "Bash(find . -name \"*.ts\" -type f -exec grep -l \"vue-eslint-parser\" {})",
      "Bash(find . -name \"eslint.config.ts\" -type f)",
      "Bash(cd /Users/elibosley/Code/api/api)",
      "Bash(find . -name \"*.test.ts\" -path \"./__test__/*\" -type f)",
      "Bash(mkdir:*)",
      "Bash(BOOT_PATH=/tmp/boot node dist/cli.js report)",
      "Bash(NODE_ENV=test node dist/cli.js report)",
      "Bash(rm:*)",
      "mcp__browsermcp__browser_click",
      "mcp__browsermcp__browser_screenshot",
      "Bash(cat:*)",
      "WebFetch(domain:reka-ui.com)",
      "Bash(corepack enable)",
      "Bash(corepack prepare:*)"
    ]
  },
  "enableAllProjectMcpServers": false
}