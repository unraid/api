/* 
 * Tailwind v4 configuration with Nuxt UI v3
 */

/* Import Tailwind CSS and Nuxt UI as per v3 documentation */
@import "tailwindcss";
@import "@nuxt/ui";
@import 'tw-animate-css';
@import '../../../@tailwind-shared/index.css';

/* Scan for Tailwind classes in all source files */
@source "../**/*.{vue,ts,js,tsx,jsx}";
@source "../../unraid-ui/src/**/*.{vue,ts,js,tsx,jsx}";
@source "../../../unraid-ui/src/**/*.{vue,ts,js,tsx,jsx}";

/* 
 * Minimal styles for our components
 * Using @layer to ensure these have lower priority than Tailwind utilities
 */

@layer base {
  /* Box-sizing for proper layout */
  .unapi *,
  .unapi *::before,
  .unapi *::after {
    box-sizing: border-box;
  }

  /* Override Unraid's button styles for Nuxt UI components */
  .unapi button {
    /* Reset Unraid's button styles */
    margin: 0 !important;
    padding: 0;
    border: none;
    background: none;
    outline: none !important;
    box-shadow: none !important;
  }

  /* Restore button functionality while removing Unraid's forced styles */
  .unapi button:not([role="switch"]) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s;
  }

  /* Ensure Nuxt UI modal/slideover close buttons work properly */
  .unapi [role="dialog"] button,
  .unapi [data-radix-collection-item] button {
    margin: 0 !important;
    background: transparent !important;
    border: none !important;
    outline: none !important;
  }

  /* Reset figure element for logo */
  .unapi figure {
    margin: 0;
    padding: 0;
  }

  /* Reset heading elements - only margin/padding */
  .unapi h1,
  .unapi h2,
  .unapi h3,
  .unapi h4,
  .unapi h5 {
    margin: 0;
    padding: 0;
  }

  /* Reset paragraph element */
  .unapi p {
    margin: 0;
    padding: 0;
  }

  /* Reset UL styles to prevent default browser styling */
  .unapi ul {
    padding-inline-start: 0;
    list-style-type: none;
  }

  /* Reset toggle/switch button backgrounds */
  .unapi button[role="switch"],
  .unapi button[role="switch"][data-state="checked"],
  .unapi button[role="switch"][data-state="unchecked"] {
    background-color: transparent;
    background: transparent;
    border: 1px solid #ccc;
  }

  /* Style for checked state */
  .unapi button[role="switch"][data-state="checked"] {
    background-color: #ff8c2f; /* Unraid orange */
  }

  /* Style for unchecked state */
  .unapi button[role="switch"][data-state="unchecked"] {
    background-color: #e5e5e5;
  }

  /* Dark mode toggle styles */
  .unapi.dark button[role="switch"][data-state="unchecked"],
  .dark .unapi button[role="switch"][data-state="unchecked"] {
    background-color: #333;
    border-color: #555;
  }

  /* Toggle thumb/handle */
  .unapi button[role="switch"] span {
    background-color: white;
  }
}

/* Override link styles inside .unapi - outside of layer for higher specificity */
.unapi a,
.unapi a:link,
.unapi a:visited {
  color: inherit;
  text-decoration: none;
}

.unapi a:hover,
.unapi a:focus {
  text-decoration: underline;
  color: inherit;
}

